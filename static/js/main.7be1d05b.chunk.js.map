{"version":3,"sources":["components/Received/Received.jsx","components/ItemForm/ItemForm.jsx","actions/index.jsx","components/ItemsList/ItemsList.jsx","components/Board/Board.jsx","components/Stores/Stores.jsx","components/Home/Home.jsx","components/Navbar/Navbar.jsx","App.js","reducers/items.jsx","index.js"],"names":["Received","useDispatch","dataList","useSelector","state","items","filter","item","received","className","dataSource","bordered","renderItem","Item","name","store","price","date","validateMessages","required","types","number","range","ItemForm","dispatch","newItemAdded","useState","setItems","Form","useForm","form","console","log","layout","onFinish","fieldsValue","values","format","type","resetFields","requiredMark","label","rules","min","message","htmlType","ItemsList","myList","currency","setCurrency","useEffect","interval","setInterval","getCurrency","clearInterval","prices","map","sumD","length","reduce","accumulator","currentValue","sumS","Math","round","columns","title","dataIndex","render","text","align","record","onClick","id","axios","get","then","response","data","rates","ILS","catch","error","pagination","showHeader","Board","Stores","stores","r","a","Object","keys","i","TabPane","Tabs","callback","key","Home","defaultActiveKey","onChange","tab","Navbar","to","App","path","component","exact","itemsReducer","action","newItem","uuidv4","concat","newItems","itemIndex","findIndex","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7be1d05b.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ItemReceived } from \"../../actions\";\n\nimport { Card, List } from \"antd\";\nimport \"./Received.scss\";\nimport \"antd/dist/antd.css\";\n\nconst Received = () => {\n  const dispatch = useDispatch();\n  const myList = useSelector((state) => state.items);\n  const dataList = myList.filter((item) => item.received === true);\n\n  return (\n    <div className=\"received\">\n      <Card className=\"received-board\">\n        <List\n          dataSource={dataList}\n          bordered\n          renderItem={(item) => (\n            <List.Item>\n              <div className=\"received-list\">\n                <div>{item.name}</div>\n                <div>{item.store}</div>\n                <div>{item.price}$</div>\n                <div>{item.date}</div>\n              </div>\n            </List.Item>\n          )}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default Received;\n","import React, { useState, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Input, InputNumber, Button, DatePicker } from \"antd\";\nimport { addItem } from \"../../actions\";\nimport \"./ItemForm.scss\";\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    number: \"Not a validate number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n\nconst ItemForm = () => {\n  const dispatch = useDispatch();\n  const newItemAdded = useSelector((state) => state.newItemAdded);\n  const [items, setItems] = useState();\n  const [form] = Form.useForm();\n\n  const onFinish = (fieldsValue) => {\n    const values = {\n      ...fieldsValue,\n      date: fieldsValue[\"date\"].format(\"DD-MM-YYYY\"),\n    };\n    setItems(values);\n    dispatch(addItem(values));\n    form.resetFields();\n  };\n  console.log(items);\n\n  const config = {\n    rules: [\n      {\n        type: \"object\",\n        required: true,\n        message: \"Please select time!\",\n      },\n    ],\n  };\n\n  return (\n    <Form\n      form={form}\n      layout=\"vertical\"\n      name=\"nest-messages\"\n      onFinish={onFinish}\n      validateMessages={validateMessages}\n      requiredMark={false}\n    >\n      <Form.Item\n        name={[\"name\"]}\n        label=\"Item Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"store\"]}\n        label=\"Online Store\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"price\"]}\n        label=\"Item Price\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        label=\"Delivery Date\"\n        name={[\"date\"]}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <DatePicker {...config} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ItemForm;\n","export const addItem = (data) => {\n  return {\n    type: \"ADD\",\n    item: data,\n  };\n};\n\nexport const ItemReceived = (id) => {\n  return {\n    type: \"RECEIVED\",\n    id: id,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\nimport { ItemReceived } from \"../../actions\";\nimport \"./ItemsList.scss\";\nimport \"antd/dist/antd.css\";\n\nconst ItemsList = () => {\n  const dispatch = useDispatch();\n  const myList = useSelector((state) => state.items);\n  const dataList = myList.filter((item) => item.received === false);\n  const [currency, setCurrency] = useState();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getCurrency();\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const prices = dataList.map((item) => item.price);\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n  const sumD = prices.length ? prices.reduce(reducer) : null;\n  const sumS = Math.round(sumD * currency);\n\n  const columns = [\n    {\n      title: \"ItemName\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"StoreName\",\n      dataIndex: \"store\",\n    },\n    {\n      title: \"ItemPrice\",\n      dataIndex: \"price\",\n      render: (text) => <div>{text}$</div>,\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n    },\n    {\n      title: \"ReceivedButton\",\n      align: \"right\",\n      render: (record) =>\n        myList.length >= 1 ? (\n          <button onClick={() => dispatch(ItemReceived(record.id))}>\n            Received\n          </button>\n        ) : null,\n    },\n  ];\n\n  const getCurrency = () => {\n    axios\n      .get(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=ILS\")\n      .then((response) => {\n        setCurrency(response.data.rates.ILS);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"items-list\">\n      <Table\n        columns={columns}\n        dataSource={dataList}\n        pagination={false}\n        showHeader={false}\n      />\n      {sumD && (\n        <>\n          <div className=\"total\">\n            Total: {sumD} $ / {sumS} ₪\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ItemsList;\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport ItemForm from \"../ItemForm/ItemForm\";\nimport ItemsList from \"../ItemsList/ItemsList\";\nimport \"./Board.scss\";\n\nconst Board = () => {\n  return (\n    <div className=\"board\">\n      <Card className=\"board-card\">\n        <Card className=\"board-list\">\n          <ItemsList />\n        </Card>\n        <Card className=\"board-form\">\n          <ItemForm />\n        </Card>\n      </Card>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { List, Card } from \"antd\";\nimport \"./Stores.scss\";\n\nconst Stores = () => {\n  const dispatch = useDispatch();\n  const myList = useSelector((state) => state.items);\n  const dataList = myList.filter((item) => item.received === false);\n\n  const stores = dataList.reduce((r, a) => {\n    r[a.store] = [...(r[a.store] || []), a];\n    return r;\n  }, {});\n\n  return (\n    <Card className=\"store\">\n      {Object.keys(stores).map((store, i) => (\n        <div className=\"store-list\" key={i}>\n          <div className=\"store-list-title\">{store}</div>\n          {stores[store].map((item) => (\n            <div className=\"store-list-item\">\n              <div>{item.name}</div>\n              <div>{item.price}$</div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nexport default Stores;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\nimport Stores from \"../Stores/Stores\";\nimport { Tabs } from \"antd\";\nimport \"./Home.scss\";\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n        <TabPane tab=\"My List\" key=\"1\">\n          <Board />\n        </TabPane>\n        <TabPane tab=\"My Stores\" key=\"2\">\n          <Stores />\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\n\nexport default function Navbar() {\n  return (\n    <header className=\"navbar\">\n      <div className=\"navbar-title\">myShop.</div>\n      <div className=\"navbar-links\">\n        <Link className=\"link\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"link\" to=\"/received\">\n          Received\n        </Link>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect, Switch, BrowserRouter } from \"react-router-dom\";\nimport Received from \"./components/Received/Received.jsx\";\nimport Home from \"./components/Home/Home.jsx\";\nimport Navbar from \"./components/Navbar/Navbar.jsx\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route path=\"/received\" component={Received} />\n          <Route path=\"/\" component={Home} />\n          <Route exact path=\"/\" component={Home} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst itemsReducer = (state = { items: [] }, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const newItem = {\n        id: uuidv4(),\n        name: action.item.name,\n        store: action.item.store,\n        price: action.item.price,\n        date: action.item.date,\n        received: false,\n      };\n      return {\n        ...state,\n        items: state.items.concat(newItem),\n      };\n    case \"RECEIVED\":\n      const newItems = [...state.items];\n      const itemIndex = state.items.findIndex((item) => item.id === action.id);\n\n      newItems[itemIndex] = {\n        ...newItems[itemIndex],\n        received: !newItems[itemIndex].received,\n      };\n\n      return {\n        ...state,\n        items: newItems,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport itemsReducer from \"./reducers/items.jsx\";\nimport \"./index.css\";\n\nconst store = createStore(\n  itemsReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}